xlab('Reziduuri') +
ylab('Count') +
ggtitle('Histograma reziduurilor') +
theme(plot.title = element_text(hjust = 0.5))
# Hisograma arata asimetrie la dreapta deoarece observam valori extreme
# in jurul valorii 200. Ca reziduurile sa fi fost normal distribuite
# hisograma ar fi trebui sa nu aiba valorile mai mari ca 100
# Asimetria (skewness) ne indica daca distributia noastra este centrata
# la stanga sau la dreapta. Valorile negative ne indica faptul ca distributia
# noastra este centrata la stanga, iar valorile pozitive la dreapta
skewness(hprice1$uhat)
# Boltirea (kurtosis) este o masura a aplatizarii distributiei si ne indica
# daca datele noastre sunt leptocurtice (ascutite) sau platicurtice (turtite)
# O valoare cat mai apropiata de 3 ne indica faptul ca distributia este normala
# Daca kurtosis < 3 => distributie leptocurtica
# Daca kurtosis > 3 => distributie platicurtica
kurtosis(hprice1$uhat) # in cazul de fata distributia noastra este platicurtica
# In urma testarii coeficintului de asimetrie si a boltirii putem trage concluzia
# ca distributia reziduurilor este asimetrica la stanga si turtita =>
# reziduurile nu sunt normal distribuite
# Pasul 4 - Graficele de tip Boxplot - arata localizarea, raspandirea si asimetria
#           unui set de observatii si poate fi folosit pentru a examina daca
#           reziduurile sunt normal distribuite. Daca reziduurile urmeaza o
#           distributie normala, atunci observatiile sunt situate in jurul valorii
#           zero. In plus, numarul de valori aberante (extreme/outlier) este mic
boxplot(model_0$residuals, main="Box Plot reziduuri")
ols_plot_resid_box(model_0)
ggplot(hprice1, aes(x=uhat, y=price)) +
geom_boxplot() +
theme_bw()+
xlab('Reziduuri') +
ylab('Pret') +
ggtitle('Boxplot reziduuri') +
theme(plot.title = element_text(hjust = 0.5))
# Toate cele 3 modalitati de reprezentare a graficului ne indica faptul ca
# avem valori extreme in reziduuri si astfel distributia noastra nu este normal
# distribuita
# Pasul 5 - Testarea normalitatii cu ajutorul testelor specifice acestei ipoteze.
#           Cele mai frecvent utilizate teste de detectare a normalitatii in
#           reziduuri sunt testele Shapiro Wilk si Jarque Bera. In practica,
#           exista mai multe teste, toate avand aceleasi ipoteze si testandu-se
#           intr-o maniera similara. Cel mai puternic test folosit atunci cand
#           setul de date contine mai putin de 50 de observatii este Shaprio-Wilk
#           iar atunci cand setul de date este mai mare de 50 de observatii
#           vom folosi Jarque-Bera. Mentionam si alte teste precum
#           Kolmogorov-Smirnov, Cramer-von Mises si Anderson-Darling care au aceleasi
#           ipoteze ca cele doua teste cel mai frecvent utilizate, deci aceeasi interpretare.
# Testul Shapiro Wilk pentru normalitate
# H0: distributie normala, Ha: distributie nenormala
shapiro.test(hprice1$uhat)
# deoarece p-value < 0.05 => reziduurile nu sunt normal distribuite
# Testul Jarque-Bera pentru normalitate
# H0: distributie normala, Ha: distributie nenormala
jarque.bera.test(hprice1$uhat)
model_WLS1 <- lm(formula = price ~ lotsize + sqrft + bdrms,
data = hprice1, weights = 1/sqrft)
summary(model_WLS1)
hprice1 %<>% mutate(pricestar = price/sqrt(sqrft),
lotsizestar = lotsize/sqrt(sqrft),
sqrftstar = sqrft/sqrt(sqrft),
bdrmsstar = bdrms/sqrt(sqrft),
constantstar = 1/sqrt(sqrft))
model_WLS2 <- lm(pricestar ~ 0 + constantstar+ lotsizestar + sqrftstar + bdrmsstar,
hprice1)
summary(model_WLS2)
bptest(model_WLS2) # p-value > 0.1 => la 99% reziduuri homoscedastice
white_test(model_WLS2) # p-value > 0.05 => la 95% reziduuri homoscedastice
coeftest(model_0, vcov. = vcovHC(model_0, type = "HC1"))
coeftest(model_0, vcov. = vcovHC(model_0, type = "HC1"))
plot(model_0)
ols_plot_cooksd_bar(model_0)
ols_plot_cooksd_chart(model_0) # ambele modalitati de calculare si afisare
ols_plot_cooksd_bar(model_0)
hprice_cook <- hprice1[-c(32,42,63,73,75,76,79,80), ]
jarque.bera.test(hprice_cook$uhat) # p-value > 0.1 => reziduurile sunt normal
# Heteroschedasticitate si normalitate
# Cuprins:
#   Ipoteza de normalitate a reziduurilor
#       1. Modelul de regresie pentru pretul caselor
#       2. Graficul 'Residuals vs Fitted'
#       3. Graficul 'Q-Q plot'
#       4. Hisograma reziduurilor
#       5. Box plotul reziduurilor
#       6. Testarea cu ajutorul Shapiro-Wilk si Jarque-Bera
#       7. Indentificarea punctelor influente cu distanta Cook
#       8. Corectarea modelului
#       9. Retestarea ipotezei de normalitate
#   Ipoteza de homoschedasticitate a reziduurilor
#     1. Analiza grafica a heteroschedasticitatii
#     2. Testele de heteroschedasticitate
#     3. Testul Breusch-Pagan
#     4. Testul White
#     5. Erorile robuste standard de heteroschedasticitate
#     6. Corectarea cu Weighted Least Squares (WLS) - MCMMP ponderat
#     7. Retestare
# Date:
#   hprice1.csv
# setup
rm(list = ls())
directory <- "C:/Users/nicus/OneDrive - Academia de Studii Economice din Bucuresti/Documents/Facultate/Econometrie/5 - Normalitate si heteroscedasticitate/"
# Instalare si activare pachete
PackageNames <- c("tidyverse", "stargazer", "magrittr", "lmtest", "sandwich",
"olsrr", "moments","whitestrap")
for(i in PackageNames){
if(!require(i, character.only = T)){
install.packages(i, dependencies = T)
require(i, character.only = T)
}
}
# Testarea ipotezei de normalitate in reziduuri -----------------
# Setul de date cu privire la pretul caselor
hprice1 <- read.csv(paste0(directory, "hprice1.csv"))
hprice1 %>%
select(price, lprice, lotsize, sqrft, bdrms) %>%
stargazer(type = "text")
# price - pret
# lprice - log de pret
# lotsize - suprafata teren
# sqrft - suprafata locuibila in casa
# bdrms - nr dormitoare
hprice1 %>%
select(price, lprice, lotsize, sqrft, bdrms) %>%
head(10)
# Model de regresie pentru pretul caselor
model_0 <- lm(price ~ lotsize + sqrft + bdrms, hprice1)
summary(model_0)
hprice1 %<>% mutate(uhat = resid(model_0)) # extragem reziduurile din model
# Testarea in 5 pasi a normalitatii reziduurilor
# 1. Graficul Residuals vs Fitted
# 2. Graficul Q-Q plot
# 3. Histograma reziduurilor
# 4. Boxplotul reziduurilor
# 5. Testele de normalitate (Shapiro-Wilk si Jarque Bera)
# Pas 1 - Graficul 'Residuals vs Fitted' - este un grafic ce arata disperia
#         reziduurilor pe axa y si valoarea ajustat (previzionata) pe axa x.
#         Pentru ca ipoteza de normalitate sa se mentina, reziduurilor ar trebui
#         sa se raspandeasca aleatoriu in jurul valorii 0 si sa formeze o banda orizontala
plot(model_0) # scriem 1 in consola pentru afisare
# Se poate realiza un grafic asemanator folosind si libraria olsrr, dar care
# nu ne arata si trendul si este mai dificil de interpretat
ols_plot_resid_fit(model_0)
# Pasul 2 - Graficul 'Q-Q plot' - o diagrama Q-Q (sau diagrama cuantile-cuantile)
#           este un grafic de dispersie care prezinta doua seturi de cuantile
#           unul fata de celalalt. Pentru a verifica normalitatea reziduurilor,
#           se traseaza cuantilele teoretice ale distributiei normale pe axa x si
#           cuantilele distributiei reziduale pe axa y. Daca diagrama Q-Q formeaza
#           o linie diagonala, putem presupune ca reziduurile urmeaza o
#           distributie normala
plot(model_0) # este al doilea grafic din functia plot si il putem afisa
# Alternativ, putem folosi functia ols_plot_resid_qq din pachetul olsrr (trebuie
# sa iesim din meniul graficelor functiei plot iar pentru aceasta vom mai da o
# valoare in consola pentru a afisa si ultimul grafic pe care il vom discuta mai jos)
ols_plot_resid_qq(model_0)
# Pasul 3 - Histograma reziduurilor - O histograma numara observatii dintre anumite
#           intervale. Pentru a nu incaca ipoteza de normalitate, histograma ar
#           trebui sa fie centrata in jurul valorii zero si ar trebui sa arate o
#           curba in forma de clopot. O frecventa ridicata la extremele histogramei
#           ar putea indica faptul ca reziduurile nu sunt distribuite normal.
ols_plot_resid_hist(model_0)
ggplot(data = hprice1) +
theme_bw() +
geom_histogram(mapping = aes(x = uhat), col = 'grey')+
xlab('Reziduuri') +
ylab('Count') +
ggtitle('Histograma reziduurilor') +
theme(plot.title = element_text(hjust = 0.5))
# Hisograma arata asimetrie la dreapta deoarece observam valori extreme
# in jurul valorii 200. Ca reziduurile sa fi fost normal distribuite
# hisograma ar fi trebui sa nu aiba valorile mai mari ca 100
# Asimetria (skewness) ne indica daca distributia noastra este centrata
# la stanga sau la dreapta. Valorile negative ne indica faptul ca distributia
# noastra este centrata la stanga, iar valorile pozitive la dreapta
skewness(hprice1$uhat)
# Boltirea (kurtosis) este o masura a aplatizarii distributiei si ne indica
# daca datele noastre sunt leptocurtice (ascutite) sau platicurtice (turtite)
# O valoare cat mai apropiata de 3 ne indica faptul ca distributia este normala
# Daca kurtosis < 3 => distributie leptocurtica
# Daca kurtosis > 3 => distributie platicurtica
kurtosis(hprice1$uhat) # in cazul de fata distributia noastra este platicurtica
# In urma testarii coeficintului de asimetrie si a boltirii putem trage concluzia
# ca distributia reziduurilor este asimetrica la stanga si turtita =>
# reziduurile nu sunt normal distribuite
# Pasul 4 - Graficele de tip Boxplot - arata localizarea, raspandirea si asimetria
#           unui set de observatii si poate fi folosit pentru a examina daca
#           reziduurile sunt normal distribuite. Daca reziduurile urmeaza o
#           distributie normala, atunci observatiile sunt situate in jurul valorii
#           zero. In plus, numarul de valori aberante (extreme/outlier) este mic
boxplot(model_0$residuals, main="Box Plot reziduuri")
ols_plot_resid_box(model_0)
ggplot(hprice1, aes(x=uhat, y=price)) +
geom_boxplot() +
theme_bw()+
xlab('Reziduuri') +
ylab('Pret') +
ggtitle('Boxplot reziduuri') +
theme(plot.title = element_text(hjust = 0.5))
# Toate cele 3 modalitati de reprezentare a graficului ne indica faptul ca
# avem valori extreme in reziduuri si astfel distributia noastra nu este normal
# distribuita
# Pasul 5 - Testarea normalitatii cu ajutorul testelor specifice acestei ipoteze.
#           Cele mai frecvent utilizate teste de detectare a normalitatii in
#           reziduuri sunt testele Shapiro Wilk si Jarque Bera. In practica,
#           exista mai multe teste, toate avand aceleasi ipoteze si testandu-se
#           intr-o maniera similara. Cel mai puternic test folosit atunci cand
#           setul de date contine mai putin de 50 de observatii este Shaprio-Wilk
#           iar atunci cand setul de date este mai mare de 50 de observatii
#           vom folosi Jarque-Bera. Mentionam si alte teste precum
#           Kolmogorov-Smirnov, Cramer-von Mises si Anderson-Darling care au aceleasi
#           ipoteze ca cele doua teste cel mai frecvent utilizate, deci aceeasi interpretare.
# Testul Shapiro Wilk pentru normalitate
# H0: distributie normala, Ha: distributie nenormala
shapiro.test(hprice1$uhat)
# deoarece p-value < 0.05 => reziduurile nu sunt normal distribuite
# Testul Jarque-Bera pentru normalitate
# H0: distributie normala, Ha: distributie nenormala
jarque.bera.test(hprice1$uhat)
# Graficul reziduurilor fata de valorile estimate de model
hprice1 %<>% mutate(yhat = fitted(model_0))
ggplot(data = hprice1, mapping = aes(x = yhat, y = uhat)) +
theme_bw() +
geom_point() +
geom_hline(yintercept = 0, col = 'red') +
labs(y = 'Reziduuri', x = 'Valori estimate')
ggplot(data = hprice1, mapping = aes(x = sqrft, y = uhat)) +
theme_bw() +
geom_point() +
geom_hline(yintercept = 0, col = 'red') +
labs(y = 'Reziduuri', x = 'Metri patrat, sqrft')
hprice1 %<>% mutate(yhat = fitted(model_0))
ggplot(data = hprice1, mapping = aes(x = yhat, y = uhat)) +
theme_bw() +
geom_point() +
geom_hline(yintercept = 0, col = 'red') +
labs(y = 'Reziduuri', x = 'Valori estimate')
model_3 <- lm(lprice ~ llotsize + lsqrft + bdrms, hprice1)
summary(model_3)
hprice1 %<>% mutate(uhat1 = resid(model_3))
ggplot(hprice1) +
theme_bw() +
geom_point(aes(x = lsqrft, y = uhat1)) +
geom_hline(yintercept = 0, col = 'red') +
labs(y = 'Reziduuri', x = 'Log metri patrat, lsqrft')
hprice1 %<>% mutate(yhat1 = fitted(model_3))
ggplot(data = hprice1, mapping = aes(x = yhat1, y = uhat1)) +
theme_bw() +
geom_point() +
geom_hline(yintercept = 0, col = 'red') +
labs(y = 'Reziduuri', x = 'Valori estimate')
bptest(model_0)
white_test(model_0)
plot(model_0)
geom_histogram(mapping = aes(x = uhat), col = 'grey')+
xlab('Reziduuri') +
ylab('Count') +
ggtitle('Histograma reziduurilor') +
theme(plot.title = element_text(hjust = 0.5))
# Heteroschedasticitate si normalitate
# Cuprins:
#   Ipoteza de normalitate a reziduurilor
#       1. Modelul de regresie pentru pretul caselor
#       2. Graficul 'Residuals vs Fitted'
#       3. Graficul 'Q-Q plot'
#       4. Hisograma reziduurilor
#       5. Box plotul reziduurilor
#       6. Testarea cu ajutorul Shapiro-Wilk si Jarque-Bera
#       7. Indentificarea punctelor influente cu distanta Cook
#       8. Corectarea modelului
#       9. Retestarea ipotezei de normalitate
#   Ipoteza de homoschedasticitate a reziduurilor
#     1. Analiza grafica a heteroschedasticitatii
#     2. Testele de heteroschedasticitate
#     3. Testul Breusch-Pagan
#     4. Testul White
#     5. Erorile robuste standard de heteroschedasticitate
#     6. Corectarea cu Weighted Least Squares (WLS) - MCMMP ponderat
#     7. Retestare
# Date:
#   hprice1.csv
# setup
rm(list = ls())
directory <- "C:/Users/nicus/OneDrive - Academia de Studii Economice din Bucuresti/Documents/Facultate/Econometrie/5 - Normalitate si heteroscedasticitate/"
# Instalare si activare pachete
PackageNames <- c("tidyverse", "stargazer", "magrittr", "lmtest", "sandwich",
"olsrr", "moments","whitestrap")
for(i in PackageNames){
if(!require(i, character.only = T)){
install.packages(i, dependencies = T)
require(i, character.only = T)
}
}
# Testarea ipotezei de normalitate in reziduuri -----------------
# Setul de date cu privire la pretul caselor
hprice1 <- read.csv(paste0(directory, "hprice1.csv"))
hprice1 %>%
select(price, lprice, lotsize, sqrft, bdrms) %>%
stargazer(type = "text")
# price - pret
# lprice - log de pret
# lotsize - suprafata teren
# sqrft - suprafata locuibila in casa
# bdrms - nr dormitoare
hprice1 %>%
select(price, lprice, lotsize, sqrft, bdrms) %>%
head(10)
# Model de regresie pentru pretul caselor
model_0 <- lm(price ~ lotsize + sqrft + bdrms, hprice1)
summary(model_0)
hprice1 %<>% mutate(uhat = resid(model_0)) # extragem reziduurile din model
# Testarea in 5 pasi a normalitatii reziduurilor
# 1. Graficul Residuals vs Fitted
# 2. Graficul Q-Q plot
# 3. Histograma reziduurilor
# 4. Boxplotul reziduurilor
# 5. Testele de normalitate (Shapiro-Wilk si Jarque Bera)
# Pas 1 - Graficul 'Residuals vs Fitted' - este un grafic ce arata disperia
#         reziduurilor pe axa y si valoarea ajustat (previzionata) pe axa x.
#         Pentru ca ipoteza de normalitate sa se mentina, reziduurilor ar trebui
#         sa se raspandeasca aleatoriu in jurul valorii 0 si sa formeze o banda orizontala
plot(model_0) # scriem 1 in consola pentru afisare
# Se poate realiza un grafic asemanator folosind si libraria olsrr, dar care
# nu ne arata si trendul si este mai dificil de interpretat
ols_plot_resid_fit(model_0)
# Pasul 2 - Graficul 'Q-Q plot' - o diagrama Q-Q (sau diagrama cuantile-cuantile)
#           este un grafic de dispersie care prezinta doua seturi de cuantile
#           unul fata de celalalt. Pentru a verifica normalitatea reziduurilor,
#           se traseaza cuantilele teoretice ale distributiei normale pe axa x si
#           cuantilele distributiei reziduale pe axa y. Daca diagrama Q-Q formeaza
#           o linie diagonala, putem presupune ca reziduurile urmeaza o
#           distributie normala
plot(model_0) # este al doilea grafic din functia plot si il putem afisa
# Alternativ, putem folosi functia ols_plot_resid_qq din pachetul olsrr (trebuie
# sa iesim din meniul graficelor functiei plot iar pentru aceasta vom mai da o
# valoare in consola pentru a afisa si ultimul grafic pe care il vom discuta mai jos)
ols_plot_resid_qq(model_0)
# Pasul 3 - Histograma reziduurilor - O histograma numara observatii dintre anumite
#           intervale. Pentru a nu incaca ipoteza de normalitate, histograma ar
#           trebui sa fie centrata in jurul valorii zero si ar trebui sa arate o
#           curba in forma de clopot. O frecventa ridicata la extremele histogramei
#           ar putea indica faptul ca reziduurile nu sunt distribuite normal.
ols_plot_resid_hist(model_0)
ggplot(data = hprice1) +
theme_bw() +
geom_histogram(mapping = aes(x = uhat), col = 'grey')+
xlab('Reziduuri') +
ylab('Count') +
ggtitle('Histograma reziduurilor') +
theme(plot.title = element_text(hjust = 0.5))
rm(list = ls())
directory <- "C:/Users/nicus/OneDrive - Academia de Studii Economice din Bucuresti/Documents/Facultate/Econometrie/5 - Normalitate si heteroscedasticitate/"
# Instalare si activare pachete
PackageNames <- c("tidyverse", "stargazer", "magrittr", "lmtest", "sandwich",
"olsrr", "moments","whitestrap", "tsoutliers")
for(i in PackageNames){
if(!require(i, character.only = T)){
install.packages(i, dependencies = T)
require(i, character.only = T)
}
}
# Instalare si activare pachete
PackageNames <- c("tidyverse", "stargazer", "magrittr", "lmtest", "sandwich",
"olsrr", "moments","whitestrap", "tsoutliers", 'tseries')
for(i in PackageNames){
if(!require(i, character.only = T)){
install.packages(i, dependencies = T)
require(i, character.only = T)
}
}
install.packages("C:/Users/nicus/Downloads/tseries_0.10-52.zip", repos = NULL, type = "win.binary")
jarque.bera.test(hprice1$uhat)
jarque.bera.test(hprice1$uhat)
# Heteroschedasticitate si normalitate
# Cuprins:
#   Ipoteza de normalitate a reziduurilor
#       1. Modelul de regresie pentru pretul caselor
#       2. Graficul 'Residuals vs Fitted'
#       3. Graficul 'Q-Q plot'
#       4. Hisograma reziduurilor
#       5. Box plotul reziduurilor
#       6. Testarea cu ajutorul Shapiro-Wilk si Jarque-Bera
#       7. Indentificarea punctelor influente cu distanta Cook
#       8. Corectarea modelului
#       9. Retestarea ipotezei de normalitate
#   Ipoteza de homoschedasticitate a reziduurilor
#     1. Analiza grafica a heteroschedasticitatii
#     2. Testele de heteroschedasticitate
#     3. Testul Breusch-Pagan
#     4. Testul White
#     5. Erorile robuste standard de heteroschedasticitate
#     6. Corectarea cu Weighted Least Squares (WLS) - MCMMP ponderat
#     7. Retestare
# Date:
#   hprice1.csv
# setup
rm(list = ls())
directory <- "C:/Users/nicus/OneDrive - Academia de Studii Economice din Bucuresti/Documents/Facultate/Econometrie/5 - Normalitate si heteroscedasticitate/"
# Instalare si activare pachete
PackageNames <- c("tidyverse", "stargazer", "magrittr", "lmtest", "sandwich",
"olsrr", "moments","whitestrap", "tsoutliers", 'tseries')
for(i in PackageNames){
if(!require(i, character.only = T)){
install.packages(i, dependencies = T)
require(i, character.only = T)
}
}
# Testarea ipotezei de normalitate in reziduuri -----------------
# Setul de date cu privire la pretul caselor
hprice1 <- read.csv(paste0(directory, "hprice1.csv"))
hprice1 %>%
select(price, lprice, lotsize, sqrft, bdrms) %>%
stargazer(type = "text")
# price - pret
# lprice - log de pret
# lotsize - suprafata teren
# sqrft - suprafata locuibila in casa
# bdrms - nr dormitoare
hprice1 %>%
select(price, lprice, lotsize, sqrft, bdrms) %>%
head(10)
# Model de regresie pentru pretul caselor
model_0 <- lm(price ~ lotsize + sqrft + bdrms, hprice1)
summary(model_0)
hprice1 %<>% mutate(uhat = resid(model_0)) # extragem reziduurile din model
# Testarea in 5 pasi a normalitatii reziduurilor
# 1. Graficul Residuals vs Fitted
# 2. Graficul Q-Q plot
# 3. Histograma reziduurilor
# 4. Boxplotul reziduurilor
# 5. Testele de normalitate (Shapiro-Wilk si Jarque Bera)
# Pas 1 - Graficul 'Residuals vs Fitted' - este un grafic ce arata disperia
#         reziduurilor pe axa y si valoarea ajustat (previzionata) pe axa x.
#         Pentru ca ipoteza de normalitate sa se mentina, reziduurilor ar trebui
#         sa se raspandeasca aleatoriu in jurul valorii 0 si sa formeze o banda orizontala
plot(model_0) # scriem 1 in consola pentru afisare
# Se poate realiza un grafic asemanator folosind si libraria olsrr, dar care
# nu ne arata si trendul si este mai dificil de interpretat
ols_plot_resid_fit(model_0)
# Pasul 2 - Graficul 'Q-Q plot' - o diagrama Q-Q (sau diagrama cuantile-cuantile)
#           este un grafic de dispersie care prezinta doua seturi de cuantile
#           unul fata de celalalt. Pentru a verifica normalitatea reziduurilor,
#           se traseaza cuantilele teoretice ale distributiei normale pe axa x si
#           cuantilele distributiei reziduale pe axa y. Daca diagrama Q-Q formeaza
#           o linie diagonala, putem presupune ca reziduurile urmeaza o
#           distributie normala
plot(model_0) # este al doilea grafic din functia plot si il putem afisa
# Alternativ, putem folosi functia ols_plot_resid_qq din pachetul olsrr (trebuie
# sa iesim din meniul graficelor functiei plot iar pentru aceasta vom mai da o
# valoare in consola pentru a afisa si ultimul grafic pe care il vom discuta mai jos)
ols_plot_resid_qq(model_0)
# Pasul 3 - Histograma reziduurilor - O histograma numara observatii dintre anumite
#           intervale. Pentru a nu incaca ipoteza de normalitate, histograma ar
#           trebui sa fie centrata in jurul valorii zero si ar trebui sa arate o
#           curba in forma de clopot. O frecventa ridicata la extremele histogramei
#           ar putea indica faptul ca reziduurile nu sunt distribuite normal.
ols_plot_resid_hist(model_0)
ggplot(data = hprice1) +
theme_bw() +
geom_histogram(mapping = aes(x = uhat), col = 'grey')+
xlab('Reziduuri') +
ylab('Count') +
ggtitle('Histograma reziduurilor') +
theme(plot.title = element_text(hjust = 0.5))
# Hisograma arata asimetrie la dreapta deoarece observam valori extreme
# in jurul valorii 200. Ca reziduurile sa fi fost normal distribuite
# hisograma ar fi trebui sa nu aiba valorile mai mari ca 100
# Asimetria (skewness) ne indica daca distributia noastra este centrata
# la stanga sau la dreapta. Valorile negative ne indica faptul ca distributia
# noastra este centrata la stanga, iar valorile pozitive la dreapta
skewness(hprice1$uhat)
# Boltirea (kurtosis) este o masura a aplatizarii distributiei si ne indica
# daca datele noastre sunt leptocurtice (ascutite) sau platicurtice (turtite)
# O valoare cat mai apropiata de 3 ne indica faptul ca distributia este normala
# Daca kurtosis < 3 => distributie leptocurtica
# Daca kurtosis > 3 => distributie platicurtica
kurtosis(hprice1$uhat) # in cazul de fata distributia noastra este platicurtica
# In urma testarii coeficintului de asimetrie si a boltirii putem trage concluzia
# ca distributia reziduurilor este asimetrica la stanga si turtita =>
# reziduurile nu sunt normal distribuite
# Pasul 4 - Graficele de tip Boxplot - arata localizarea, raspandirea si asimetria
#           unui set de observatii si poate fi folosit pentru a examina daca
#           reziduurile sunt normal distribuite. Daca reziduurile urmeaza o
#           distributie normala, atunci observatiile sunt situate in jurul valorii
#           zero. In plus, numarul de valori aberante (extreme/outlier) este mic
boxplot(model_0$residuals, main="Box Plot reziduuri")
ols_plot_resid_box(model_0)
ggplot(hprice1, aes(x=uhat, y=price)) +
geom_boxplot() +
theme_bw()+
xlab('Reziduuri') +
ylab('Pret') +
ggtitle('Boxplot reziduuri') +
theme(plot.title = element_text(hjust = 0.5))
# Toate cele 3 modalitati de reprezentare a graficului ne indica faptul ca
# avem valori extreme in reziduuri si astfel distributia noastra nu este normal
# distribuita
# Pasul 5 - Testarea normalitatii cu ajutorul testelor specifice acestei ipoteze.
#           Cele mai frecvent utilizate teste de detectare a normalitatii in
#           reziduuri sunt testele Shapiro Wilk si Jarque Bera. In practica,
#           exista mai multe teste, toate avand aceleasi ipoteze si testandu-se
#           intr-o maniera similara. Cel mai puternic test folosit atunci cand
#           setul de date contine mai putin de 50 de observatii este Shaprio-Wilk
#           iar atunci cand setul de date este mai mare de 50 de observatii
#           vom folosi Jarque-Bera. Mentionam si alte teste precum
#           Kolmogorov-Smirnov, Cramer-von Mises si Anderson-Darling care au aceleasi
#           ipoteze ca cele doua teste cel mai frecvent utilizate, deci aceeasi interpretare.
# Testul Shapiro Wilk pentru normalitate
# H0: distributie normala, Ha: distributie nenormala
shapiro.test(hprice1$uhat)
# deoarece p-value < 0.05 => reziduurile nu sunt normal distribuite
# Testul Jarque-Bera pentru normalitate
# H0: distributie normala, Ha: distributie nenormala
jarque.bera.test(hprice1$uhat)
ols_plot_cooksd_chart(model_0) # ambele modalitati de calculare si afisare
